{"version":3,"sources":["components/Layout/Layout.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","index.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css"],"names":["Layout","children","className","ContactForm","state","name","number","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onAddContact","this","styles","form","onSubmit","type","onChange","placeholder","button","Component","ContactList","contacts","onRemoveContact","list","map","id","item","key","onClick","Filter","onFilterChange","App","filter","handleAddContact","contactAvailable","alert","contact","shortid","generate","prevState","handleRemoveContact","contactId","handleFilterChange","handleVisibleTasks","toLowerCase","includes","find","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","getVisibleTasks","length","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.8f4ef498.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Layout.css\";\n\nconst Layout = ({ children }) => <div className=\"Layout\">{children}</div>;\n\nexport default Layout;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func.isRequired\n  };\n  state = {\n    name: \"\",\n    number: \"\"\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onAddContact(this.state.name, this.state.number);\n    this.setState({\n      name: \"\",\n      number: \"\"\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <div className={styles.form}>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Name\n            <br />\n            <input\n              type=\"text\"\n              value={name}\n              onChange={this.handleChange}\n              name=\"name\"\n              placeholder=\"Введите имя контакта\"\n            />\n          </label>\n          <br />\n          <br />\n          <label>\n            Number\n            <br />\n            <input\n              type=\"text\"\n              value={number}\n              onChange={this.handleChange}\n              name=\"number\"\n              placeholder=\"Введите номер контакта\"\n            />\n          </label>\n          <br />\n          <br />\n          <button className={styles.button} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onRemoveContact }) => (\n  <div>\n    <ul className={styles.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={styles.item} key={id}>\n          {name}: {number}\n          <button className={styles.button} onClick={() => onRemoveContact(id)}>\n            Delete Contact\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  onRemoveContact: PropTypes.func.isRequired\n};\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nexport default function Filter({ value, onFilterChange }) {\n  return (\n    <div>\n      <h4>Find contacts by name</h4>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => onFilterChange(e.target.value)}\n        placeholder=\"Поиск контакта\"\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onFilterChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport Layout from \"./Layout/Layout\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\"\n  };\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem(\"contacts\");\n\n    if (persistedContacts) {\n      this.setState({\n        contacts: JSON.parse(persistedContacts)\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handleAddContact = (name, number) => {\n    if (this.contactAvailable(name)) {\n      alert(`${name} is alredy in contacts`);\n      return;\n    }\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number\n    };\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, contact]\n    }));\n  };\n\n  handleRemoveContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(({ id }) => id !== contactId)\n    }));\n  };\n\n  handleFilterChange = filter => {\n    this.setState({ filter });\n  };\n\n  handleVisibleTasks = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  contactAvailable = contact => {\n    const { contacts } = this.state;\n    return contacts.find(\n      ({ name }) => name.toLowerCase() === contact.toLowerCase()\n    );\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const getVisibleTasks = this.handleVisibleTasks();\n    return (\n      <Layout>\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={this.handleAddContact} />\n        <h2>Contacts</h2>\n        {contacts.length >= 2 && (\n          <Filter value={filter} onFilterChange={this.handleFilterChange} />\n        )}\n        <ContactList\n          contacts={getVisibleTasks}\n          onRemoveContact={this.handleRemoveContact}\n        />\n      </Layout>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__KA4tl\",\"item\":\"ContactList_item__L-uK-\",\"button\":\"ContactList_button__2KxXw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__1i4ll\",\"form\":\"ContactForm_form__3LwaH\"};"],"sourceRoot":""}